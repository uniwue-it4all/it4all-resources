- id: 1
  collectionId: 3
  toolId: programming
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Lotterie
  author: bje40dc
  text:
    relativePath: programming/3-conditions/1-text.html
  state: APPROVED

  content:
    functionName: lottery
    foldername: lottery
    filename: lottery
    inputTypes: []
    outputType: VOID

    unitTestPart:

      unitTestType: Normal

      unitTestsDescription: >

      unitTestFiles:
        - name: lottery.py
          resourcePath: programming/3-conditions/1-lottery/lottery_declaration.py
          fileType: python
          editable: false
        - name: test_lottery.py
          resourcePath: programming/3-conditions/1-lottery/test_lottery_declaration.py
          fileType: python
          editable: true

      unitTestTestConfigs:
        - id: 0
          shouldFail: false
          description: Musterlösung...
        - id: 1
          shouldFail: true
          description: Bei Gewinnstufe 0 soll der korrekte Gewinn zurückgegeben werden.
        - id: 2
          shouldFail: true
          description: Bei Gewinnstufe 1 soll der korrekte Gewinn zurückgegeben werden.
        - id: 3
          shouldFail: true
          description: Bei Gewinnstufe 2 soll der korrekte Gewinn zurückgegeben werden.
        - id: 4
          shouldFail: true
          description: Bei Gewinnstufe 3 soll der korrekte Gewinn zurückgegeben werden.
        - id: 5
          shouldFail: true
          description: Bei Gewinnstufe 4 soll der korrekte Gewinn zurückgegeben werden.
        - id: 6
          shouldFail: true
          description: Bei Gewinnstufe 5 soll der korrekte Gewinn zurückgegeben werden.
        - id: 7
          shouldFail: true
          description: Bei einer Gewinnststufe kleiner 0 oder größer 5 soll die Gewinnstufe 0 angenommen werden.
      testFileName: test_lottery.py
      sampleSolFileNames: [test_lottery.py]

    implementationPart:
      base: |
        def calculate_lottery_win(pot: float, win_class: int) -> float:
            pass
      files:
        - name: test_lottery.py
          resourcePath: programming/3-conditions/1-lottery/test_lottery.py
          fileType: python
          editable: false
        - name: lottery.py
          resourcePath: programming/3-conditions/1-lottery/lottery_declaration.py
          fileType: python
          editable: true
      implFileName: lottery.py
      sampleSolFileNames: [lottery.py]

    sampleSolutions:
      - id: 1
        sample:
          files:
            - name: lottery.py
              resourcePath: programming/3-conditions/1-lottery/lottery.py
              fileType: python
              editable: false
            - name: test_lottery.py
              resourcePath: programming/3-conditions/1-lottery/test_lottery.py
              fileType: python
              editable: false
          testData: []

    sampleTestData: []

    tags:
      - Conditions
      - Math

- id: 2
  collectionId: 3
  toolId: programming
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Rabatt
  author: bje40dc
  text:
    relativePath: programming/3-conditions/2-text.html
  state: APPROVED

  content:
    functionName: discount
    foldername: discount
    filename: discount
    inputTypes: []
    outputType: VOID

    unitTestPart:

      unitTestType: Normal

      unitTestsDescription: >

      unitTestFiles:
        - name: discount.py
          resourcePath: programming/3-conditions/2-discount/discount_declaration.py
          fileType: python
          editable: false
        - name: test_discount.py
          resourcePath: programming/3-conditions/2-discount/test_discount_declaration.py
          fileType: python
          editable: true

      unitTestTestConfigs:
        - id: 0
          shouldFail: false
          description: Musterlösung...
        - id: 1
          shouldFail: true
          description: Falls der Kunde einen Hund besitzt, soll der korrekte Rabatt gewährt werden.
        - id: 2
          shouldFail: true
          description: Falls der Kunde eine Katze besitzt, soll der korrekte Rabatt gewährt werden.
        - id: 3
          shouldFail: true
          description: Falls der Kunde einen Hund und eine Katze besitzt, soll der korrekte Rabatt gewährt werden.
        - id: 4
          shouldFail: true
          description: Falls der Kunde keinen Hund und keine Katze besitzt, soll der korrekte Rabatt gewährt werden.
        - id: 5
          shouldFail: true
          description: Falls der Kunde einen Hamster besitzt, soll der korrekte Rabatt gewährt werden.
        - id: 6
          shouldFail: true
          description: Falls der Kunde keinen Hamster besitzt, soll der korrekte Rabatt gewährt werden.
      testFileName: test_discount.py
      sampleSolFileNames: [test_discount.py]

    implementationPart:
      base: |
        def calculate_discount(has_dog: bool, has_cat: bool, has_hamster: bool) -> int:
            pass
      files:
        - name: test_discount.py
          resourcePath: programming/3-conditions/2-discount/test_discount.py
          fileType: python
          editable: false
        - name: discount.py
          resourcePath: programming/3-conditions/2-discount/discount_declaration.py
          fileType: python
          editable: true
      implFileName: discount.py
      sampleSolFileNames: [discount.py]

    sampleSolutions:
      - id: 1
        sample:
          files:
            - name: discount.py
              resourcePath: programming/3-conditions/2-discount/discount.py
              fileType: python
              editable: false
            - name: test_discount.py
              resourcePath: programming/3-conditions/2-discount/test_discount.py
              fileType: python
              editable: false
          testData: []

    sampleTestData: []

    tags:
      - Conditions
      - Math

- id: 3
  collectionId: 3
  toolId: programming
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Grußformel
  author: bje40dc
  text:
    relativePath: programming/3-conditions/3-text.html
  state: APPROVED

  content:
    functionName: greet
    foldername: greet
    filename: greet
    inputTypes: []
    outputType: VOID

    unitTestPart:

      unitTestType: Normal

      unitTestsDescription: >

      unitTestFiles:
        - name: greet.py
          resourcePath: programming/3-conditions/3-greet/greet_declaration.py
          fileType: python
          editable: false
        - name: test_greet.py
          resourcePath: programming/3-conditions/3-greet/test_greet_declaration.py
          fileType: python
          editable: true

      unitTestTestConfigs:
        - id: 0
          shouldFail: false
          description: Musterlösung...
        - id: 1
          shouldFail: true
          description: Für die Zeit von 0 bis 6 Uhr soll die korrekte Grußformel zurückgegeben werden.
        - id: 2
          shouldFail: true
          description: Für die Zeit von 6 bis 12 Uhr soll die korrekte Grußformel zurückgegeben werden.
        - id: 3
          shouldFail: true
          description: Für die Zeit von 12 bis 18 Uhr soll die korrekte Grußformel zurückgegeben werden.
        - id: 4
          shouldFail: true
          description: Für die Zeit von 18 bis 21 Uhr soll die korrekte Grußformel zurückgegeben werden.
        - id: 5
          shouldFail: true
          description: Für die Zeit von 21 bis 24 Uhr soll die korrekte Grußformel zurückgegeben werden.
        - id: 6
          shouldFail: true
          description: Für eine ungültige Zeit kleiner als 0 soll 'I do not know this time' zurückgegeben werden.
        - id: 7
          shouldFail: true
          description: Für eine ungültige Zeit größer als 24 soll 'I do not know this time' zurückgegeben werden.
      testFileName: test_greet.py
      sampleSolFileNames: [test_greet.py]

    implementationPart:
      base: |
        def greet(hour: int) -> str:
            pass
      files:
        - name: test_greet.py
          resourcePath: programming/3-conditions/3-greet/test_greet.py
          fileType: python
          editable: false
        - name: greet.py
          resourcePath: programming/3-conditions/3-greet/greet_declaration.py
          fileType: python
          editable: true
      implFileName: greet.py
      sampleSolFileNames: [greet.py]

    sampleSolutions:
      - id: 1
        sample:
          files:
            - name: greet.py
              resourcePath: programming/3-conditions/3-greet/greet.py
              fileType: python
              editable: false
            - name: test_greet.py
              resourcePath: programming/3-conditions/3-greet/test_greet.py
              fileType: python
              editable: false
          testData: []

    sampleTestData: []

    tags:
      - Conditions
      - Strings