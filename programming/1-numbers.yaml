- id: 1
  collectionId: 1
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Größter gemeinsamer Teiler
  author: bje40dc
  text: >
    Implementieren Sie die folgende Funktion ggt(a: int, b -> int) -> int, die den größten gemeinsamen Teiler
    zweier Zahlen berechnet!
  state: APPROVED

  functionName: ggt
  foldername: ggt
  filename: ggt

  inputTypes: [{id: 1, name: a, type: int}, {id: 2, name: b, type: int}]
  outputType: int

  unitTestPart:
    unitTestType: Simplified
    unitTestsDescription: TODO!
    unitTestFiles: []
    unitTestTestConfigs: []
    testFileName: test_ggt.py
    sampleSolFileNames: []

  implementationPart:
    base: |
      def ggt(a: int, b: int) -> int:
          return 0
    files:
      - path: ggt.py
        resourcePath: programming/1-numbers/1-ggt/ggt_declaration.py
        fileType: python
        editable: true
    implFileName: ggt.py
    sampleSolFileNames: [ggt.py]

  sampleSolutions:
    - id: 1
      files:
        - path: ggt.py
          resourcePath: programming/1-numbers/1-ggt/ggt.py
          fileType: python
          editable: true

  sampleTestData:
    - {id: 1, inputs: [12, 4], output: 4}
    - {id: 2, inputs: [3, 7], output: 1}
    - {id: 3, inputs: [64, 46], output: 2}
    - {id: 4, inputs: [777, 111], output: 111}
    - {id: 5, inputs: [15, 25], output: 5}

  tags:
    - ForLoops
    - Conditions
    - Math

- id: 2
  collectionId: 1
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Fakultät
  author: bje40dc
  text: >
    Implementieren Sie die Funktion factorial(n: int) -> int, die die Fakultät der Zahl n berechnet.
  state: APPROVED

  functionName: factorial
  foldername: factorial
  filename: factorial

  inputTypes: [{id: 1, name: n, type: int}]
  outputType: int

  unitTestPart:
    unitTestType: Normal

    unitTestsDescription: >
      Schreiben Sie Unittests für die Funktion <code>factorial(n: int) -> int</code>. Diese soll die Fakultät der Zahl
      <code>n</code> berechnen. Der Funktionsparameter <code>n</code> soll größer als 0 sein.

    unitTestFiles:
      - path: factorial.py
        resourcePath: programming/1-numbers/2-factorial/factorial_declaration.py
        fileType: python
        editable: false
      - path: test_factorial.py
        resourcePath: programming/1-numbers/2-factorial/test_factorial_declaration.py
        fileType: python
        editable: true

    unitTestTestConfigs:
      - id: 0
        shouldFail: false
        description: Diese Implementierung ist korrekt und sollte alle Tests bestehen.

      - id: 1
        shouldFail: true
        cause: IllegalArgument
        description: Falls das Funktionsargument 'n' keine Ganzzahl ist, soll eine Exception geworfen werden.

      - id: 2
        shouldFail: true
        cause: IllegalArgument
        description: Falls das Funktionsargument kleiner oder gleich 0 ist, soll eine Exception geworfen werden.

      - id: 3
        shouldFail: true
        cause: WrongResult
        description: Die Funktion soll das richtige Resultat zurückliefern.
    testFileName: test_factorial.py
    sampleSolFileNames: [test_factorial.py]

  implementationPart:
    base: |
      def factorial(n: int) -> int:
          pass
    files:
      - path: test_factorial.py
        resourcePath: programming/1-numbers/2-factorial/test_factorial.py
        fileType: python
        editable: false
      - path: factorial.py
        resourcePath: programming/1-numbers/2-factorial/factorial_declaration.py
        fileType: python
        editable: true
    implFileName: factorial.py
    sampleSolFileNames: [factorial.py]

  sampleTestData: []

  sampleSolutions:
    - id: 1
      files:
        - path: test_factorial.py
          resourcePath: programming/1-numbers/2-factorial/test_factorial.py
          fileType: python
          editable: false
        - path: factorial.py
          resourcePath: programming/1-numbers/2-factorial/factorial.py
          fileType: python
          editable: false

  tags:
    - Exceptions
    - Math
    - ForLoops

- id: 3
  collectionId: 1
  semanticVersion: {major: 0, minor: 0, patch: 1}
  title: Babylonisches Wurzelziehen
  author: bje40dc
  text: >
    <p>
      Implementieren Sie die Funktion <code>babylonian_root(number: float, count: int) -> float</code>, die eine Näherung
      der Wurzel der Zahl <code>number</code> in einem iterativen Verfahren nach der
      <a href="https://de.wikipedia.org/wiki/Heron-Verfahren" target="_blank">Babylonischen Methode</a> berechnet.
    </p>
    <p>
      Die Formel für die einzelnen Werte <code>x<sub>n</sub></code> ergibt (mit Startwert <code>a = number</code>) sich
      aus <code>x<sub>n+1</sub> = 1/2 * (x<sub>n</sub> + a / x<sub>n</sub>)</code>. Es sollen exakt <code>count</code>
      Iterationen berechnet werden.
    </p>
    <p>
      Es soll eine Exception geworfen werden, falls das Argument <code>number</code> keine Zahl (int oder float) oder
      kleiner oder gleich 0 oder das Argument <code>count</code> keine Ganzzahl oder kleiner als 0 ist.
    </p>

  state: APPROVED

  functionName: babylonian_root
  filename: babylonian_root
  foldername: babylonian_root

  inputTypes: [{id: 1, name: number, type: float}, {id: 2, name: count, type: int}]
  outputType: float

  unitTestPart:
    unitTestType: Normal

    unitTestsDescription: ''

    unitTestFiles:
      - path: babylonian_root.py
        resourcePath: programming/1-numbers/3-babylonian_root/babylonian_root_declaration.py
        fileType: python
        editable: false
      - path: test_babylonian_root.py
        resourcePath: programming/1-numbers/3-babylonian_root/test_babylonian_root_declaration.py
        fileType: python
        editable: true

    unitTestTestConfigs:
      - id: 0
        shouldFail: false
        cause: ''
        description: Diese Implementierung ist korrekt und sollte alle Tests bestehen.
      - id: 1
        shouldFail: true
        cause: ''
        description:  Falls das Funktionsargument 'count' keine Ganzzahl ist, soll eine Exception geworfen werden.
      - id: 2
        shouldFail: true
        cause: ''
        description: Falls das Argument 'count' kleiner als 0 ist, soll eine Exception geworfen werden.
      - id: 3
        shouldFail: true
        cause: ''
        description: Falls das Argument 'number' keine Zahl ist, soll eine Exception geworfen werden.
      - id: 4
        shouldFail: true
        cause: ''
        description: Falls das Argument 'number' kleiner oder gleich 0 ist, soll eine Exception geworfen werden.
      - id: 5
        shouldFail: true
        cause: ''
        description: >
          Die Funktion sollte das korrekte Ergebnis liefern, indem sie die korrekte Anzahl an Iterationen durchführt.

    testFileName: test_babylonian_root.py

    sampleSolFileNames: [test_babylonian_root.py]

  implementationPart:
    base: ''
    files:
      - path: test_babylonian_root.py
        resourcePath: programming/1-numbers/3-babylonian_root/test_babylonian_root.py
        fileType: python
        editable: false
      - path: babylonian_root.py
        resourcePath: programming/1-numbers/3-babylonian_root/babylonian_root_declaration.py
        fileType: python
        editable: true
    implFileName: babylonian_root.py
    sampleSolFileNames: [babylonian_root.py]

  sampleSolutions:
    - id: 1
      files:
        - path: test_babylonian_root.py
          resourcePath: programming/1-numbers/3-babylonian_root/test_babylonian_root.py
          fileType: python
          editable: false
        - path: babylonian_root.py
          resourcePath: programming/1-numbers/3-babylonian_root/babylonian_root.py
          fileType: python
          editable: false

  sampleTestData: []

  tags:
    - Exceptions
    - ForLoops
    - Math

- id: 4
  collectionId: 1
  semanticVersion: {major: 0, minor: 0, patch: 1}
  title: Fibonacci
  author: bje40dc
  text: >
    <p>
      Implementieren Sie die Funktion <code>fibonacci(number: int) -> int</code>, die die n. Zahl der
      <a href="https://de.wikipedia.org/wiki/Fibonacci-Folge" target="_blank">Fibonacci-Folge</a> berechnet.
    </p>
    <p>
      Die Werte der Fibonacci-Folge ergeben sich mit den Startwerten <code>x<sub>0</sub> = x<sub>1</sub> = 1</code>
      nach der Formel <code>x<sub>n</sub> = x<sub>n-1</sub> + x<sub>n-2</sub></code>.
    </p>
  state: APPROVED

  functionName: fibonacci
  filename: fibonacci
  foldername: fibonacci

  inputTypes: [{id: 1, name: number, type: int}]
  outputType: int

  unitTestPart:
    unitTestType: Normal

    unitTestsDescription: ''

    unitTestFiles:
      - path: fibonacci.py
        resourcePath: programming/1-numbers/4-fibonacci/fibonacci_declaration.py
        fileType: python
        editable: true
      - path: test_fibonacci.py
        resourcePath: programming/1-numbers/4-fibonacci/test_fibonacci_declaration.py
        fileType: python
        editable: true

    unitTestTestConfigs:
      - id: 0
        shouldFail: false
        cause: ''
        description: Diese Implementierun ist korrekt und sollte alle Tests bestehen.
      - id: 1
        shouldFail: true
        cause: ''
        description: Falls das Argument 'number' keine Zahl ist, soll eine Exception geworfen werden.
      - id: 2
        shouldFail: true
        cause: ''
        description: Falls das Argument 'number' kleiner als 0 ist, soll eine Exception geworfen werden.
      - id: 3
        shouldFail: true
        cause: ''
        description: Die Funktion sollte den richtigen Startwert für 0 benutzen.
      - id: 4
        shouldFail: true
        cause: ''
        description: Die Funktion sollte den richtigen Startwert für 1 benutzen.
      - id: 5
        shouldFail: true
        cause: ''
        description: Die Funktion sollte das richtige Ergebnis berechnen.

    testFileName: test_fibonacci.py
    sampleSolFileNames: [test_fibonacci.py]

  implementationPart:
    base:  ''
    files:
      - path: test_fibonacci.py
        resourcePath: programming/1-numbers/4-fibonacci/test_fibonacci.py
        fileType: python
        editable: false
      - path: fibonacci.py
        resourcePath: programming/1-numbers/4-fibonacci/fibonacci_declaration.py
        fileType: python
        editable: true
    implFileName: fibonacci.py
    sampleSolFileNames: [fibonacci.py]

  sampleSolutions:
    - id: 1
      files:
        - path: test_fibonacci.py
          resourcePath: programming/1-numbers/4-fibonacci/test_fibonacci.py
          fileType: python
          editable: false
        - path: fibonacci.py
          resourcePath: programming/1-numbers/4-fibonacci/fibonacci.py
          fileType: python
          editable: false

  sampleTestData: []

  tags:
    - Exceptions
    - Recursion
