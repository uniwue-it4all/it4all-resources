- id: 1
  collectionId: 4
  toolId: programming
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Durchschnitt
  author: bje40dc
  text: >
    Berechnen Sie den Durchschnittswert aller Elemente als Gleitkommazahl in der übergebenen Liste von (Ganz-)Zahlen!
    Bei einer leeren Liste soll 'None' zurückgegeben werden.
  state: APPROVED

  content:
    functionName: average
    foldername: average
    filename: average

    inputTypes:
      - id: 1
        inputName: my_list
        inputType:
          genericType: LIST
          subType: INTEGER
    outputType: FLOAT

    unitTestPart:
      unitTestType: Simplified
      unitTestsDescription: TODO!
      unitTestFiles: []
      unitTestTestConfigs: []
      testFileName: test_average.py
      sampleSolFileNames: []

    implementationPart:
      base: |
        from typing import List

        def average(my_list: List[int]) -> float:
            return 0
      files:
        - name: average.py
          resourcePath: programming/4-lists/1-average/average_declaration.py
          fileType: python
          editable: true
      implFileName: average.py
      sampleSolFileNames: [average.py]

    sampleSolutions:
      - id: 1
        sample:
          files:
            - name: average.py
              resourcePath: programming/4-lists/1-average/average.py
              fileType: python
              editable: false
          testData: []

    sampleTestData:
      - {id: 1, input: [], output: null}
      - {id: 2, input: [1], output: 1.0}
      - {id: 3, input: [3, 5, 7], output: 5.0}

    tags:
      - ForLoops
      - Math

- id: 2
  collectionId: 4
  toolId: programming
  semanticVersion:
    major: 1
    minor: 0
    patch: 0
  title: Längste Zeichenkette
  author: bje40dc
  text: >
    Suchen Sie aus einer Liste von Zeichenketten jeweils die längste heraus! Bei einer leeren Liste soll 'None' zurückgegeben werden.
    Ignorieren Sie dabei Groß- und Kleinschreibung.
  state: APPROVED

  content:
    functionName: longest_string
    foldername: longest_string
    filename: longest_string

    inputTypes:
      - id: 1
        inputName: my_list
        inputType:
          genericType: LIST
          subType: STRING

    outputType: STRING

    unitTestPart:
      unitTestType: Simplified
      unitTestsDescription: TODO!
      unitTestFiles: []
      unitTestTestConfigs: []
      testFileName: test_longest_string.py
      sampleSolFileNames: []

    implementationPart:
      base: |
        from typing import List

        def longest_string(my_list: List[str]) -> str:
            return ''
      files:
        - name: longest_string.py
          resourcePath: programming/4-lists/2-longest_string/longest_string_declaration.py
          fileType: python
          editable: true
      implFileName: longest_string.py
      sampleSolFileNames: [longest_string.py]

    sampleSolutions:
      - id: 1
        sample:
          files:
            - name: longest_string.py
              resourcePath: programming/4-lists/2-longest_string/longest_string.py
              fileType: python
              editable: false
          testData: []

    sampleTestData:
      - {id: 1, input: [], output: null}
      - {id: 2, input: ["0"], output: "0"}
      - {id: 3, input: ["1", "11", "111"], output: "111"}
      - {id: 4, input: ["1", "121", "12321", "232", "3"], output: "12321"}

    tags:
      - ForLoops
      - Conditions
      - Lists
      - Strings

- id: 3
  collectionId: 4
  toolId: programming
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Allgemeine Aufgaben
  author: bje40dc
  text:
    relativePath: programming/4-lists/3-text.html
  state: APPROVED

  content:
    functionName: general
    foldername: general
    filename: general
    inputTypes: []
    outputType: VOID

    unitTestPart:

      unitTestType: Normal

      unitTestsDescription: >

      unitTestFiles:
        - name: general.py
          resourcePath: programming/4-lists/3-general/general_declaration.py
          fileType: python
          editable: false
        - name: test_general.py
          resourcePath: programming/4-lists/3-general/test_general_declaration.py
          fileType: python
          editable: true

      unitTestTestConfigs:
        - id: 0
          shouldFail: false
          description: Musterlösung...
        - id: 1
          shouldFail: true
          description: Die Funktion filter_greater soll nur die Zahlen in einer Liste zurückgeben, die größer als die übergebene Zahl sind.
        - id: 2
          shouldFail: true
          description: Die Funktion filter_greater soll eine leere Liste zurückgeben, falls keine Zahl größer als die übergebene Zahl ist.
        - id: 3
          shouldFail: true
          description: Die Funktion count_lower soll die Zahlen zählen, welche kleiner als die übergebene Zahl sind.
        - id: 4
          shouldFail: true
          description: Die Funktion count_lower soll 0 zurückgeben, falls keine Zahl kleiner als die übergebene Zahl ist.
        - id: 5
          shouldFail: true
          description: Die Funktion bank_card_security_value soll die Zahlen mit den Inidzes multiplizieren.
        - id: 6
          shouldFail: true
          description: Die Funktion bank_card_security_value soll die Zahlen mit den korrekten Indizes mutltiplizieren.
        - id: 7
          shouldFail: true
          description: Die Funktion bank_card_security_value soll 0 zurückgeben, falls die übergebene Liste leer ist.
        - id: 8
          shouldFail: true
          description: Die Funktion vector_length soll alle Einträge zuerst quadrieren.
        - id: 9
          shouldFail: true
          description: Die Funktion vector_length soll alle quadrierten Einträge addieren.
        - id: 10
          shouldFail: true
          description: Die Funktion vector_length soll die Wurzel der quadrierten und addierten Einträge zurückgeben.
        - id: 11
          shouldFail: true
          description: Die Funktion vector_length soll 0 zurückgeben, falls die übergebene Liste leer ist.
        - id: 12
          shouldFail: true
          description: Die Funktion vector_scalar soll den übergebenen Skalarwert zu jedem Element im Originalvektor addieren.
        - id: 13
          shouldFail: true
          description: Die Funktion vector_scalar soll den korrekten übergebenen Skalarwert zu jedem Element im Originalvektor addieren.
        - id: 14
          shouldFail: true
          description: Die Funktion vector_scalar soll eine leere Liste zurückgeben, falls die übergebene Liste leer ist.
        - id: 15
          shouldFail: true
          description: Die Funktion vector_add_vector soll eine leere Liste zurückgeben, falls die Längen der beiden übergebenen Listen nicht übereinstimmen.
        - id: 16
          shouldFail: true
          description: Die Funktion vector_add_vector soll die beiden Vektoren korrekt addieren.
        - id: 17
          shouldFail: true
          description: Die Funktion vector_add_vector soll eine leere Liste zurückgeben, falls beide übergebenen Listen leer sind.
        - id: 18
          shouldFail: true
          description: Die Funktion flatten_lists soll alle Listen korrekt in einer neuen Liste vereinen.
        - id: 19
          shouldFail: true
          description: Die Funktion flatten_lists soll eine leere Liste zurückgeben, falls die übergebene Liste leer ist.
      testFileName: test_general.py
      sampleSolFileNames: [test_general.py]

    implementationPart:
      base: |
        from typing import List


        def filter_greater(vector: List[int], x: int) -> List[int]:
            pass


        def count_lower(vector: List[int], x: int) -> int:
            pass


        def bank_card_security_value(digits: List[int]) -> int:
            pass


        def vector_length(vector: List[int]) -> float:
            pass


        def vector_add_scalar(vector: List[int], scalar: int) -> List[int]:
            pass


        def vector_add_vector(vector1: List[int], vector2: List[int]) -> List[int]:
            pass


        def flatten_lists(list_of_lists: List[List[int]]) -> List[int]:
            pass
      files:
        - name: test_general.py
          resourcePath: programming/4-lists/3-general/test_general.py
          fileType: python
          editable: false
        - name: general.py
          resourcePath: programming/4-lists/3-general/general_declaration.py
          fileType: python
          editable: true
      implFileName: general.py
      sampleSolFileNames: [general.py]

    sampleSolutions:
      - id: 1
        sample:
          files:
            - name: general.py
              resourcePath: programming/4-lists/3-general/general.py
              fileType: python
              editable: false
            - name: test_general.py
              resourcePath: programming/4-lists/3-general/test_general.py
              fileType: python
              editable: false
          testData: []

    sampleTestData: []

    tags:
      - Lists
      - ForLoops
      - Math
      - Conditions

- id: 4
  collectionId: 4
  toolId: programming
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Slicing
  author: bje40dc
  text:
    relativePath: programming/4-lists/4-text.html
  state: APPROVED

  content:
    functionName: slicing
    foldername: slicing
    filename: slicing
    inputTypes: []
    outputType: VOID

    unitTestPart:

      unitTestType: Normal

      unitTestsDescription: >

      unitTestFiles:
        - name: slicing.py
          resourcePath: programming/4-lists/4-slicing/slicing_declaration.py
          fileType: python
          editable: false
        - name: test_slicing.py
          resourcePath: programming/4-lists/4-slicing/test_slicing_declaration.py
          fileType: python
          editable: true

      unitTestTestConfigs:
        - id: 0
          shouldFail: false
          description: Musterlösung...
        - id: 1
          shouldFail: true
          description: Die Funktion even_indexes soll alle Elemente an geraden Indizes zurückgeben.
        - id: 2
          shouldFail: true
          description: Die Funktion even_indexes soll alle Elemente an geraden Indizes und nicht an ungeraden Indizes zurückgeben.
        - id: 3
          shouldFail: true
          description: Die Funktion even_indexes soll alle Elemente an gerade Indizes und nicht am 0. Index zurückgeben.
        - id: 4
          shouldFail: true
          description: Die Funktion reversed_special soll vom vorletzten Element aus beginnen.
        - id: 5
          shouldFail: true
          description: Die Funktion reversed_special soll jedes dritte Element, vom vorletzten Element aus beginnend, ausgeben.
        - id: 6
          shouldFail: true
          description: Die Funktion first_half soll die erste Hälfte der Liste zurückgeben.
        - id: 7
          shouldFail: true
          description: Die Funktion first_half soll bei ungeraden Längen abrunden.
        - id: 8
          shouldFail: true
          description: Die Funktion rotate_right soll für jede Umdrehung das letzte Element der Liste an den Anfang der Liste setzen.
        - id: 9
          shouldFail: true
          description: Die Funktion rotate_right soll die korrekte Anzahl an übergebenen Umdrehungen durchführen.
      testFileName: test_slicing.py
      sampleSolFileNames: [test_slicing.py]

    implementationPart:
      base: |
        from typing import List


        def even_indexes(my_list: List[int]) -> List[int]:
            pass


        def reversed_special(my_list: List[int]) -> List[int]:
            pass


        def first_half(my_list: List[int]) -> List[int]:
            pass


        def rotate_right(my_list: List[int], count: int) -> List[int]:
            pass
      files:
        - name: test_slicing.py
          resourcePath: programming/4-lists/4-slicing/test_slicing.py
          fileType: python
          editable: false
        - name: slicing.py
          resourcePath: programming/4-lists/4-slicing/slicing_declaration.py
          fileType: python
          editable: true
      implFileName: slicing.py
      sampleSolFileNames: [slicing.py]

    sampleSolutions:
      - id: 1
        sample:
          files:
            - name: slicing.py
              resourcePath: programming/4-lists/4-slicing/slicing.py
              fileType: python
              editable: false
            - name: test_slicing.py
              resourcePath: programming/4-lists/4-slicing/test_slicing.py
              fileType: python
              editable: false
          testData: []

    sampleTestData: []

    tags:
      - Lists
      - Slicing