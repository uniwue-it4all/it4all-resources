- id: 1
  collectionId: 1
  semanticVersion:
    major: 1
    minor: 0
    patch: 0
  title: Tutorial Konto
  author: bje40dc
  text: >
    Eine Bank verwaltet die Konten ihrer Kunden. Jedes Konto wird durch die Kontonummer identifiziert und speichert das momentane Saldo sowie die
    Vertragsdauer (in Jahren). Diese Konten können entweder ein Girokonto, ein Sparkonto oder ein Kreditkonto sein. Für jeden Typ von Konto gilt ein anderer
    Zinssatz: Für ein Girokonto gibt es keine Zinsen, für ein Sparkonto 1 Prozent und für ein Kreditkonto 3 Prozent. Die Kunden der Bank werden durch
    ihre Kundennummer identifiziert. Es soll außerdem jeweils der komplette Name gespeichert werden. Jeder Kunde kann mehrere Konten besitzen
    und hat die Möglichkeit, sich das Gesamtsaldo aller Konten anzeigen zu lassen und Geld auf ein Konto einzuzahlen.
  state: APPROVED

  mappings:
    - {key: Konten, value: Konto}
    - {key: Kunden, value: Kunde}
    - {key: Jahren, value: Jahr}
    - {key: Zinsen, value: Zins}

  toIgnore: [Eine, Jedes, Diese, Für, Jeder, Es, Zudem, Die]

  sampleSolutions:
    - id: 1
      sample:
        classes:
          - classType: CLASS
            name: Kunde
            attributes:
              - {visibility: public, memberName: name, memberType: string}
              - {visibility: public, memberName: kundennummer, memberType: int}
            methods:
              - {visibility: public, memberName: gesamtGuthaben, parameters: '', memberType: float}
          - classType: ABSTRACT
            name: Konto
            attributes:
              - {visibility: public, memberName: kontonummer, memberType: int}
              - {visibility: public, memberName: vertragsdauerInJahren, memberType: int}
              - {visibility: public, memberName: zinssatz, memberType: float}
              - {visibility: public, memberName: saldo, memberType: float}
            methods:
              - {visibility: public, memberName: einzahlen, parameters: double, memberType: void}
          - {classType: CLASS, name: Sparkonto}
          - {classType: CLASS, name: Girokonto}
          - {classType: CLASS, name: Kreditkonto}
        associations:
          - {assocType: ASSOCIATION, firstEnd: Kunde, firstMult: SINGLE, secondEnd: Konto, secondMult: UNBOUND}
        implementations:
          - {subClass: Girokonto, superClass: Konto}
          - {subClass: Sparkonto, superClass: Konto}
          - {subClass: Kreditkonto, superClass: Konto}

- id: 2
  collectionId: 1
  semanticVersion:
    major: 1
    minor: 0
    patch: 0
  title: Krankenhaus
  author: bje40dc
  text: >
    Ein Krankenhaus hat einen Namen und besteht aus Stationen mit einer eindeutigen Nummer. Jede Station hat einen oder
    mehrere Doktoren, Krankenschwestern und Patienten. Jede Person hat jeweils eine eindeutige Id und einen Namen.
    Ein Doktor kann dem Patienten ein Rezept mit einer eindeutigen Id verschreiben, das ein oder mehrere Medikamente
    beinhalten kann. Ein Medikament hat eine eindeutige Id und einen Namen und kann Patienten auf verschiedenen Rezepten
    verschrieben werden. Ein Patient wiederum kann in einer Station aufgenommen bzw. entlassen werden.
  state: APPROVED

  mappings:
    - {key: Stationen, value: Station}
    - {key: Doktoren, value: Doktor}
    - {key: Krankenschwestern, value: Krankenschwester}
    - {key: Patienten, value: Patient}
    - {key: Namen, value: Name}
    - {key: Medikamente, value: Medikament}
    - {key: Rezepten, value: Rezept}
  toIgnore: [Ein, Jede]

  sampleSolutions:
    - id: 1
      sample:
        classes:
          - classType: ABSTRACT
            name: Person
            attributes:
              - {visibility: public, memberName: id, memberType: int}
              - {visibility: public, memberName: name, memberType: string}

          - classType: CLASS
            name: Doktor
            methods:
              - {visibility: public, memberName: verschreiben, parameters: Patient, memberType: void}

          - classType: CLASS
            name: Rezept
            attributes:
              - {visibility: public, memberName: id, memberType: int}

          - classType: CLASS
            name: Patient
            methods:
              - {visibility: public, memberName: entlassen, parameters: Station, memberType: void}
              - {visibility: public, memberName: aufnehmen, parameters: Station, memberType: void}

          - classType: CLASS
            name: Krankenschwester

          - classType: CLASS
            name: Station
            attributes:
              - {visibility: public, memberName: nummer, memberType: int}

          - classType: CLASS
            name: Medikament
            attributes:
              - {visibility: public, memberName: id, memberType: int}
              - {visibility: public, memberName: name, memberType: string}

          - classType: CLASS
            name: Krankenhaus
            attributes:
              - {visibility: public, memberName: name, memberType: string}

        implementations:
          - {subClass: Patient, superClass: Person}
          - {subClass: Doktor, superClass: Person}
          - {subClass: Krankenschwester, superClass: Person}

        associations:
          - {assocType: ASSOCIATION, firstEnd: Doktor, firstMult: SINGLE, secondEnd: Rezept, secondMult: UNBOUND}
          - {assocType: ASSOCIATION, firstEnd: Station, firstMult: SINGLE, secondEnd: Patient, secondMult: UNBOUND}
          - {assocType: ASSOCIATION, firstEnd: Station, firstMult: SINGLE, secondEnd: Krankenschwester, secondMult: UNBOUND}
          - {assocType: ASSOCIATION, firstEnd: Station, firstMult: SINGLE, secondEnd: Doktor, secondMult: UNBOUND}
          - {assocType: ASSOCIATION, firstEnd: Patient, firstMult: SINGLE, secondEnd: Rezept, secondMult: UNBOUND}
          - {assocType: ASSOCIATION, firstEnd: Rezept, firstMult: UNBOUND, secondEnd: Medikament, secondMult: UNBOUND}
          - {assocType: COMPOSITION, firstEnd: Station, firstMult: UNBOUND, secondEnd: Krankenhaus, secondMult: SINGLE}
