- id: 1
  collectionId: 1
  semanticVersion:
    major: 1
    minor: 0
    patch: 0
  title: Tutorial Konto
  author: bje40dc
  text: >
    Eine Bank verwaltet die Konten ihrer Kunden. Jedes Konto wird durch die Kontonummer identifiziert und speichert das momentane Saldo sowie die
    Vertragsdauer (in Jahren). Diese Konten können entweder ein Girokonto, ein Sparkonto oder ein Kreditkonto sein. Für jeden Typ von Konto gilt ein anderer
    Zinssatz: Für ein Girokonto gibt es keine Zinsen, für ein Sparkonto 1 Prozent und für ein Kreditkonto 3 Prozent. Die Kunden der Bank werden durch
    ihre Kundennummer identifiziert. Es soll außerdem jeweils der komplette Name gespeichert werden. Jeder Kunde kann mehrere Konten besitzen
    und hat die Möglichkeit, sich das Gesamtsaldo aller Konten anzeigen zu lassen und Geld auf ein Konto einzuzahlen.
  state: APPROVED

  mappings:
    - {key: Konten, value: Konto}
    - {key: Kunden, value: Kunde}
    - {key: Jahren, value: Jahr}
    - {key: Zinsen, value: Zins}

  toIgnore: [Eine, Jedes, Diese, Für, Jeder, Es, Zudem, Die]

  samples:
    - id: 1
      classes:
        - classType: CLASS
          name: Kunde
          attributes:
            - {visibility: public, name: name, type: String}
            - {visibility: public, name: kundennummer, type: int}
          methods:
            - {visibility: public, name: gesamtGuthaben, parameters: '', type: double}
        - classType: ABSTRACT
          name: Konto
          attributes:
            - {visibility: public, name: kontonummer, type: int}
            - {visibility: public, name: vertragsdauerInJahren, type: int}
            - {visibility: public, name: zinssatz, type: double}
            - {visibility: public, name: saldo, type: double}
          methods:
            - {visibility: public, name: einzahlen, parameters: double, type: void}
        - {classType: CLASS, name: Sparkonto}
        - {classType: CLASS, name: Girokonto}
        - {classType: CLASS, name: Kreditkonto}
      associations:
        - assocType: ASSOCIATION
          firstEnd: Kunde
          firstMult: SINGLE
          secondEnd: Konto
          secondMult: UNBOUND
      implementations:
        - {subClass: Girokonto, superClass: Konto}
        - {subClass: Sparkonto, superClass: Konto}
        - {subClass: Kreditkonto, superClass: Konto}

- id: 2
  collectionId: 1
  semanticVersion:
    major: 1
    minor: 0
    patch: 0
  title: Krankenhaus
  author: bje40dc
  text: >
    Ein Krankenhaus hat einen Namen und besteht aus Stationen mit einer eindeutigen Nummer. Jede Station hat einen oder
    mehrere Doktoren, Krankenschwestern und Patienten. Jede Person hat jeweils eine eindeutige Id und einen Namen.
    Ein Doktor kann dem Patienten ein Rezept mit einer eindeutigen Id verschreiben, das ein oder mehrere Medikamente
    beinhalten kann. Ein Medikament hat eine eindeutige Id und einen Namen und kann Patienten auf verschiedenen Rezepten
    verschrieben werden. Ein Patient wiederum kann in einer Station aufgenommen bzw. entlassen werden.
  state: APPROVED

  mappings:
    - {key: Stationen, value: Station}
    - {key: Doktoren, value: Doktor}
    - {key: Krankenschwestern, value: Krankenschwester}
    - {key: Patienten, value: Patient}
    - {key: Namen, value: Name}
    - {key: Medikamente, value: Medikament}
    - {key: Rezepten, value: Rezept}
  toIgnore: [Ein, Jede]

  samples:
    - id: 1
      classes:
        - classType: ABSTRACT
          name: Person
          attributes:
            - {visibility: public, name: id, type: int}
            - {visibility: public, name: name, type: String}

        - classType: CLASS
          name: Doktor
          methods:
            - {visibility: public, name: verschreiben, parameters: Patient, type: void}

        - classType: CLASS
          name: Rezept
          attributes:
            - {visibility: public, name: id, type: int}

        - classType: CLASS
          name: Patient
          methods:
            - {visibility: public, name: entlassen, parameters: Station, type: void}
            - {visibility: public, name: aufnehmen, parameters: Station, type: void}

        - classType: CLASS
          name: Krankenschwester

        - classType: CLASS
          name: Station
          attributes:
            - {visibility: public, name: nummer, type: int}

        - classType: CLASS
          name: Medikament
          attributes:
            - {visibility: public, name: id, type: int}
            - {visibility: public, name: name, type: String}

        - classType: CLASS
          name: Krankenhaus
          attributes:
            - {visibility: public, name: name, type: String}

      implementations:
        - {subClass: Patient, superClass: Person}
        - {subClass: Doktor, superClass: Person}
        - {subClass: Krankenschwester, superClass: Person}

      associations:
        - assocType: ASSOCIATION
          firstEnd: Doktor
          firstMult: SINGLE
          secondEnd: Rezept
          secondMult: UNBOUND

        - assocType: ASSOCIATION
          firstEnd: Station
          firstMult: SINGLE
          secondEnd: Patient
          secondMult: UNBOUND

        - assocType: ASSOCIATION
          firstEnd: Station
          firstMult: SINGLE
          secondEnd: Krankenschwester
          secondMult: UNBOUND

        - assocType: ASSOCIATION
          firstEnd: Station
          firstMult: SINGLE
          secondEnd: Doktor
          secondMult: UNBOUND

        - assocType: ASSOCIATION
          firstEnd: Patient
          firstMult: SINGLE
          secondEnd: Rezept
          secondMult: UNBOUND

        - assocType: ASSOCIATION
          firstEnd: Rezept
          firstMult: UNBOUND
          secondEnd: Medikament
          secondMult: UNBOUND

        - assocType: COMPOSITION
          firstEnd: Station
          firstMult: UNBOUND
          secondEnd: Krankenhaus
          secondMult: SINGLE
