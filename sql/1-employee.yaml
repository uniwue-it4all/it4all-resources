- id: 1
  collectionId: 1
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Anzahl der Angestellten
  author: bje40dc
  text: Wie viele Angestellte hat die Firma? Benennen Sie das Ergebnis als 'Anzahl'.
  exerciseType: SELECT
  state: APPROVED
  sampleSolutions:
    - id: 1
      sample: |
        SELECT COUNT(*) AS Anzahl
          FROM employee;
    - id: 2
      sample: |
        SELECT COUNT(id) AS Anzahl
          FROM employee;
  tags: []

- id: 2
  collectionId: 1
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Angestelltennummer
  author: bje40dc
  text: Welche Angestelltennummer (id) hat Max Becker?
  exerciseType: SELECT
  state: APPROVED
  sampleSolutions:
    - id: 1
      sample: |
        SELECT id
          FROM employee
          WHERE firstname = 'Max'
            AND lastname = 'Becker';
  tags: []

- id: 3
  collectionId: 1
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Emailadresse
  author: bje40dc
  text: Welche Emailadresse hat Max Becker für die Arbeit?
  exerciseType: SELECT
  state: APPROVED
  sampleSolutions:
    - id: 1
      sample: |
        SELECT emailaddress
          FROM employee
            JOIN emailaddress ON employee.id = emailaddress.employee_id
          WHERE firstname = 'Max' AND lastname = 'Becker';

    - id: 2
      sample: |
        SELECT emailaddress
          FROM employee, emailaddress
          WHERE employee.id = emailaddress.employee_id
            AND firstname = 'Max' AND lastname = 'Becker';

    - id: 3
      sample: |
        SELECT emailaddress
          FROM employee as emp, emailaddress as email
          WHERE emp.id = email.employee_id
            AND firstname = 'Max' AND lastname = 'Becker';
  tags: [SQL_JOIN]

- id: 4
  collectionId: 1
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Nutzernamen
  author: bje40dc
  text: Geben Sie die Nutzernamen aller Angestellten alphabetisch geordnet aus!
  exerciseType: SELECT
  state: APPROVED
  sampleSolutions:
    - id: 1
      sample: |
        SELECT username
          FROM employee
          ORDER BY username;
  tags: [SQL_ORDER_BY]

- id: 5
  collectionId: 1
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Anzahl der Untergebenen
  author: bje40dc
  text: Wie viele Untergebene hat jeder Chef? Geben Sie jeweils die OID des Chefs und die Anzahl aus!
  exerciseType: SELECT
  state: APPROVED
  sampleSolutions:
    - id: 1
      sample: |
        SELECT chef_id, count(id)
          FROM employee
          WHERE chef_id IS NOT NULL
          GROUP BY chef_id;
  tags: [SQL_GROUP_BY]

- id: 6
  collectionId: 1
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: TODO!
  author: bje40dc
  text: Erstellen Sie das CREATE TABLE-Skript für die Tabelle employee!
  exerciseType: CREATE
  state: CREATED
  sampleSolutions:
    - id: 1
      sample: |
        CREATE TABLE employee (
          id INT PRIMARY KEY,
          firstname VARCHAR(50),
          lastname VARCHAR(50),
          username VARCHAR(20),
          chef_id INT,
          FOREIGN KEY (chef_id) REFERENCES employee(id)
        );
  tags: []

- id: 7
  collectionId: 1
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: TODO!
  author: bje40dc
  text: Der Angestellte mit der OID 8 arbeitet jetzt für den Angestellten mit der OID 3. Aktualisieren Sie die Datenbank!
  exerciseType: UPDATE
  state: APPROVED
  sampleSolutions:
    - id: 1
      sample: |
        UPDATE employee
          SET chef_id = 3
          WHERE id = 8
  tags: []

- id: 8
  collectionId: 1
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: TODO!
  author: bje40dc
  text: Der Angestellte mit der OID 7 hat gekündigt. Löschen Sie ihn aus der Angestelltentabelle.
  exerciseType: DELETE
  state: APPROVED
  sampleSolutions:
    - id: 1
      sample: |
        DELETE FROM employee
          WHERE id = 7
  tags: []

- id: 9
  collectionId: 1
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: TODO!
  author: bje40dc
  text: >
    Es gibt eine neue Angestellte mit Namen Tina Sattler. Diese arbeitet für die Person mit der OID 2 und soll als
    OID 9 und als Nutzernamen tina_sattler bekommen.
  exerciseType: INSERT
  state: APPROVED
  sampleSolutions:
    - id: 1
      sample: |
        INSERT INTO employee VALUES
          (9, 'Tina', 'Sattler', 'tina_sattler', 2)
    - id: 2
      sample: |
        INSERT INTO employee (id, firstname, lastname, username, chef_id) VALUES
          (9, 'Tina', 'Sattler', 'tina_sattler', 2)
  tags: []
