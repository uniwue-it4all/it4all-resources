[
	{
		"id": 114, 
		"exercisetype": "SELECT", 
		"text": "Wählen Sie alle Kunden aus, deren Nachname nur aus vier Buchstaben besteht. Geben Sie nur den Vornamen und Nachnamen aus. Die Datensätze sollen nach dem Nachnamen alphabetisch sortiert werden.", 
		"samplesolutions": [
			"SELECT first_name, family_name FROM customers WHERE LENGTH(family_name) = 4 ORDER BY family_name ASC", 
			"SELECT first_name, family_name FROM customers WHERE LENGTH(family_name) = 4 ORDER BY family_name"
		], 
		"tags": [
			"ORDER_BY"
		]
	}, 
	{
		"id": 115,
		"exercisetype": "SELECT",
		"text": "Finden Sie alle Bücher, die zu einem reduziertem Preis erworben wurden. Geben Sie hierfür die ID der Bestellposition (Tabelle: 'order_positions'), den Buchtitel, den aktuellen Preis (neue Spalte: 'current_price') und den reduzierten Preis (neue Spalte: 'order_price') aus.",
		"samplesolutions": [
			"SELECT order_positions.id, title, books.price AS current_price, order_positions.price AS order_price FROM order_positions JOIN books ON books.id = book_id WHERE (books.price - order_positions.price) > 0"
		],
		"tags": [
			"JOIN",
			"ALIAS"
		]
	},
	{
		"id": 121, 
		"exercisetype": "SELECT", 
		"text": "Zeigen Sie sämtliche Datensätze der Bücher-Tabelle an und ordnen Sie diese nach Erscheinungsjahr abwärts.", 
		"samplesolutions": [
			"SELECT * FROM books ORDER BY year DESC"
		], 
		"tags": [
			"ORDER_BY"
		]
	}, 
	{
		"id": 122, 
		"exercisetype": "SELECT", 
		"text": "Bestimmen Sie die Signatur des Buches 'The Walking Dead' (ohne Anführungszeichen).", 
		"samplesolutions": [
			"SELECT signature FROM books WHERE title='The Walking Dead'"
		]
	}, 
	{
		"id": 123, 
		"exercisetype": "SELECT", 
		"text": "Zeigen Sie Titel, Verlag-Name und Lagerbestand sämtlicher Bücher an deren Lagerbestand geringer als 40000 ist.", 
		"hint": "Die Zuordnung von Verlag-Id zu Verlag-Name befindet sich in der Tabelle 'publishers'.", 
		"samplesolutions": [
			"SELECT title, publishers.name, stock FROM books JOIN publishers ON publisher_id = publishers.id WHERE stock < 40000"
		], 
		"tags": [
			"JOIN"
		]
	}, 
	{
		"id": 125, 
		"exercisetype": "SELECT", 
		"text": "Geben Sie alle Kunden aus, die vor dem Jahr 2000 geboren sind.", 
		"samplesolutions": [
			"SELECT * FROM customers WHERE birthday < '2000-01-01'"
		]
	}, 
	{
		"id": 127, 
		"exercisetype": "SELECT", 
		"text": "Finden Sie alle Kunden, die ihre Bestellung noch nicht bezahlt haben. Geben sie die Bestell-ID (neuer Spaltenname: 'order_id '), den Nachnamen des Kunden und seine zugehörige Email-Adresse aus.", 
		"samplesolutions": [
			"SELECT orders.id AS order_id, family_name, email FROM customers JOIN orders ON customers.id = customer_id WHERE paid = 0"
		], 
		"tags": [
			"JOIN", 
			"ALIAS"
		]
	}, 
	{
		"id": 128, 
		"exercisetype": "SELECT", 
		"text": "Geben Sie die Kunden aus, die mehr als eine Bestellung getätigt haben. Geben sie die Kunden-ID, den Nachnamen und die Anzahl seiner Bestellungen (neuer Spaltenname: 'quantity ') aus.", 
		"samplesolutions": [
			"SELECT customers.id, family_name, COUNT(customer_id) AS quantity FROM customers JOIN orders ON customers.id = customer_id GROUP BY customer_id HAVING ( COUNT(customer_id) > 1 )"
		], 
		"tags": [
			"FUNCTION", 
			"JOIN", 
			"GROUP_BY"
		]
	}, 
	{
		"id": 131, 
		"exercisetype": "SELECT", 
		"text": "Berechnen Sie für jede Bestellung den Gesamtpreis, den der Kunde zahlen muss. Geben Sie nur die Bestell-ID und den Gesamtpreis (neuer Spaltenname 'sum') aus. Beachten Sie, dass die Kunden mehrere Exemplare eines Buches bestellen können (Spalte: 'amount ').", 
		"samplesolutions": [
			"SELECT id, SUM(price * amount) AS 'sum' FROM order_positions GROUP BY order_id"
		], 
		"tags": [
			"FUNCTION", 
			"ALIAS", 
			"GROUP_BY"
		]
	}, 
	{
		"id": 132, 
		"exercisetype": "SELECT", 
		"text": "Listen Sie die Bücher auf, die unter der Bestellnummer: '9 ' zusammengefasst sind. Sortieren Sie das Ergebnis aufsteigend nach dem Erscheinungsjahr.", 
		"samplesolutions": [
			"SELECT books.* FROM books JOIN order_positions ON books.id = book_id WHERE order_id = 9 ORDER BY year ASC"
		], 
		"tags": [
			"JOIN", 
			"ORDER_BY"
		]
	}, 
	{
		"id": 133, 
		"exercisetype": "SELECT", 
		"text": "Geben Sie für jeden Kunden aus, wie oft diese bereits Bestellungen abgegeben haben. Listen Sie dafür den Vornamen, Nachnamen und die Anzahl der Bestellungen (neue Spalte: 'order_count '). Sortieren Sie die Liste anschließend absteigend nach der errechneten Anzahl.", 
		"samplesolutions": [
			"SELECT first_name, family_name, COUNT(orders.id) AS order_count FROM customers JOIN orders ON customers.id = customer_id GROUP BY customers.id ORDER BY order_count DESC"
		], 
		"tags": [
			"FUNCTION", 
			"JOIN", 
			"GROUP_BY", 
			"ORDER_BY"
		]
	}, 
	{
		"id": 134, 
		"exercisetype": "SELECT", 
		"text": "Berechnen Sie den durchschnittlichen Preis eines bestellten Buches aus der Tabelle 'order_positions'.Das Ergebnis soll in einer Spalte namens: 'average_price' angezeigt werden.", 
		"samplesolutions": [
			"SELECT AVG(price) AS 'average_price' FROM order_positions"
		], 
		"tags": [
			"FUNCTION"
		]
	}, 
	{
		"id": 135, 
		"exercisetype": "SELECT", 
		"text": "Geben Sie zu jedem Kunden Vorname, Nachname und Anzahl seiner Bewertungen (Spalte rating_count). Die Bewertungen befinden sich in der Tabelle 'ratings '. Ordnen Sie die Einträge nach Anzahl der Bewertungen abwärts.", 
		"samplesolutions": [
			"SELECT customers.first_name, customers.family_name, count(*) AS rating_count FROM ratings LEFT JOIN customers ON customers.id=customer_id GROUP BY customer_id ORDER BY rating_count DESC"
		], 
		"tags": [
			"FUNCTION", 
			"ALIAS", 
			"JOIN", 
			"GROUP_BY", 
			"ORDER_BY"
		]
	}, 
	{
		"id": 136, 
		"exercisetype": "SELECT", 
		"text": "Bestimmen Sie jene drei Bücher mit der höchsten durchschnittlichen Bewertung. Geben Sie dabei Buchname und durchschnittliche Bewertung (Spaltenbezeichnung 'avg_rating ') an. Ordnen Sie die Einträge nach durchschnittlicher Bewertung abwärts.", 
		"samplesolutions": [
			"SELECT books.title, avg(rating) AS avg_rating FROM ratings JOIN books ON books.id=book_id GROUP BY book_id ORDER BY avg_rating DESC LIMIT 3"
		], 
		"tags": [
			"FUNCTION", 
			"LIMIT", 
			"ORDER_BY", 
			"JOIN", 
			"GROUP_BY"
		]
	}, 
	{
		"id": 137, 
		"exercisetype": "SELECT", 
		"text": "Geben Sie durchschnittliche Bewertung und Anzahl der Bewertungen zum Buch 'Harry Potter und der Orden des Phönix ' (ohne Anführungszeichen) an. Benennen Sie die Spalten 'avg_rating' und 'rating_count'.", 
		"samplesolutions": [
			"SELECT avg(rating) AS avg_rating, count(*) AS rating_count FROM ratings JOIN books ON books.id=book_id WHERE books.title='Harry Potter und der Orden des Phönix' GROUP BY book_id"
		], 
		"tags": [
			"FUNCTION", 
			"ALIAS", 
			"JOIN", 
			"GROUP_BY"
		]
	}, 
	{
		"id": 138, 
		"exercisetype": "SELECT", 
		"text": "Suchen Sie alle Bewertungen der Kundin 'Christl Seeliger' an. Die Einträge sollen Buchnamen sowie die Bewertung enthalten. Ordnen Sie die Einträge zusätzlich nach Bewertung abwärts.", 
		"samplesolutions": [
			"SELECT books.title, rating FROM ratings LEFT JOIN books ON books.id=book_id LEFT JOIN customers ON customers.id=customer_id WHERE customers.first_name = 'Christl ' AND customers.family_name = 'Seeliger ' ORDER BY rating DESC"
		], 
		"tags": [
			"DOUBLE_JOIN", 
			"ORDER_BY"
		]
	}, 
	{
		"id": 139, 
		"exercisetype": "SELECT", 
		"text": "Stellen Sie alle Buchtitel, welche auf der Wunschliste von Wilhard Herold befinden dar.", 
		"samplesolutions": [
			"SELECT books.title FROM wishlists LEFT JOIN books ON books.id=book_id LEFT JOIN customers ON customers.id=customer_id WHERE customers.first_name ='Wilhard ' AND customers.family_name = 'Herold'"
		], 
		"tags": [
			"DOUBLE_JOIN"
		]
	}, 
	{
		"id": 140, 
		"exercisetype": "SELECT", 
		"text": "Ermitteln Sie das meist gewünschteste Buch. Geben Sie dabei Buchtitel sowie Anzahl des Auftretens auf den Wunschzetteln (Spaltenbezeichnung wish_count) an.", 
		"samplesolutions": [
			"SELECT books.title, count(*) AS wish_count FROM wishlists LEFT JOIN books ON books.id=book_id GROUP BY book_id ORDER BY wish_count DESC LIMIT 1"
		], 
		"tags": [
			"FUNCTION", 
			"JOIN", 
			"GROUP_BY", 
			"ORDER_BY", 
			"LIMIT"
		]
	}, 
	{
		"id": 141, 
		"exercisetype": "SELECT", 
		"text": "Ermitteln sie alle Buchtitel jener Büche, welche sich auf keiner Wunschliste befinden.", 
		"samplesolutions": [
			"SELECT books.title FROM books WHERE id NOT IN (SELECT book_id FROM wishlists)"
		], 
		"tags": [
			"SUBSELECT"
		]
	}, 
	{
		"id": 142, 
		"exercisetype": "SELECT", 
		"text": "Ermitteln Sie Titel und durchschnittliche Bewertung aller bewerteten Bücher. Ordnen Sie die Einträge aufsteigend nach durchschnittlicher Bewertung. Bezeichen Sie die Spalte der durchschnittlichen Bewertung mit 'avg_rating '.", 
		"samplesolutions": [
			"SELECT books.title, avg(rating) AS avg_rating FROM ratings JOIN books ON books.id=book_id GROUP BY book_id ORDER BY avg_rating ASC"
		], 
		"tags": [
			"FUNCTION", 
			"GROUP_BY", 
			"ORDER_BY"
		]
	}, 
	{
		"id": 144, 
		"exercisetype": "SELECT", 
		"text": "Wählen Sie Titel und Preis aller Bücher aus, deren Preis unter 10€ liegt. Ordnen Sie die Einträge zusätzlich preislich aufwärts.", 
		"samplesolutions": [
			"SELECT title, price FROM books WHERE price &lt; 10 ORDER BY price ASC"
		], 
		"tags": [
			"ORDER_BY"
		]
	}, 
	{
		"id": 147, 
		"exercisetype": "SELECT", 
		"text": "Zeigen Sie Titel, Autor und Peis aller Bücher an. Ordnen Sie die Einträge zusätzlich preislich aufwärts.", 
		"samplesolutions": [
			"SELECT title, author, price FROM books ORDER BY price ASC"
		], 
		"tags": [
			"ORDER_BY"
		]
	}, 
	{
		"id": 148, 
		"exercisetype": "SELECT", 
		"text": "Zeigen Sie sämtliche Autoren an deren Bücher über den Carlsen-Verlag publiziert wurden. Hinweis: Die Zuordnung von Verlag-Id zu Verlag-Name befindet sich in der Tabelle 'publishers'.", 
		"samplesolutions": [
			"SELECT author FROM books JOIN publishers ON publisher_id=publishers.id WHERE publishers.name ='Carlsen' GROUP BY author"
		], 
		"tags": [
			"JOIN", 
			"GROUP_BY"
		]
	}, 
	{
		"id": 150, 
		"exercisetype": "SELECT", 
		"text": "Bestimmen Sie den potentiellen Umsatz des Buches 'Animal Farm ' (ohne Anführungszeichen). Nennen Sie diese Spalte 'revenue' (ohne Anführungszeichen).", 
		"hint": "Als potentieller Umsatz wird hier das Produkt von Bestand und Preis bezeichnet", 
		"samplesolutions": [
			"SELECT stock * price AS revenue FROM books WHERE title='Animal Farm'", 
			"SELECT price * stock AS revenue FROM books WHERE title='Animal Farm'"
		]
	}, 
	{
		"id": 155, 
		"exercisetype": "SELECT", 
		"text": "Berechnen Sie das Alter der jeweiligen Kunden. Die Ergebnistabelle soll zu jedem Kunden den Geburtstag und das Alter (in einer neuen Spalte 'age') beinhalten. Hinweis: Verwenden Sie zum Abrunden den FLOOR-Operator.", 
		"samplesolutions": [
			"SELECT birthday, FLOOR(DATEDIFF(NOW(), birthday)/365) AS age FROM customers"
		], 
		"tags": [
			"FUNCTION", 
			"ALIAS"
		]
	}, 
	{
		"id": 156, 
		"exercisetype": "SELECT", 
		"text": "Finden Sie alle Email-Adressen, die mehrfach in der Tabelle 'customers' vorkommen. Geben Sie zusätzlich die Häufigkeit in einer neuen Spalte mit dem Namen 'occurrences' an.", 
		"samplesolutions": [
			"SELECT email, COUNT(email) AS occurrences FROM customers GROUP BY email HAVING ( COUNT(email) > 1 )"
		], 
		"tags": [
			"FUNCTION", 
			"GROUP_BY"
		]
	}, 
	{
		"id": 157, 
		"exercisetype": "SELECT", 
		"text": "Sie möchten zu jeder Bestellung (aus der Tabelle 'orders') den passenden Kunden herausfinden. Geben Sie hierfür das Bestelldatum, die Bestell-ID (Spaltenname: 'order_id'), den Nachnamen des Kunden und seine zugehörige Kunden-ID (Spaltenname: 'customer_id') aus. Ordnen Sie die resultierenden Datensätze absteigend nach dem Bestelldatum.", 
		"samplesolutions": [
			"SELECT date, orders.id AS order_id, family_name, customers.id AS customer_id FROM customers JOIN orders ON customers.id = customer_id ORDER BY date DESC"
		], 
		"tags": [
			"JOIN", 
			"ALIAS"
		]
	}, 
	{
		"id": 1, 
		"exercisetype": "UPDATE", 
		"text": "Aktualisieren Sie den Lagerbestand des Buches 'Dexter' auf den neuene Wert '2042'", 
		"samplesolutions": [
			"UPDATE books SET stock=2042 WHERE title='Dexter'"
		], 
		"validation": "SELECT * FROM books"
	}, 
	{
		"id": 2, 
		"exercisetype": "UPDATE", 
		"text": "Aktualisieren Sie die Email-Adresse von Paulina Rohl. Die neue Adresse soll 'paulina.r@yahoo.com' lauten.", 
		"samplesolutions": [
			"UPDATE customers SET email='paulina.r@yahoo.com' WHERE first_name='Paulina' AND family_name='Rohr'"
		], 
		"validation": "SELECT * FROM books"
	}, 
	{
		"id": 1, 
		"exercisetype": "DELETE", 
		"text": "Löschen Sie alle Kunden, die nach dem Jahr 1995 geboren wurden.", 
		"samplesolutions": [
			"DELETE FROM customers WHERE birthday > '1995-01-01'"
		], 
		"validation": "SELECT * FROM customers"
	}, 
	{
		"id": 2, 
		"exercisetype": "DELETE", 
		"text": "Löschen Sie alle Kunden, die noch keine Bestellung abgegeben haben.", 
		"samplesolutions": [
			"DELETE FROM customers WHERE id NOT IN (SELECT customer_id FROM orders)"
		], 
		"tags": [
			"SUBSELECT"
		], 
		"validation": "SELECT * FROM customers"
	}, 
	{
		"id": 3, 
		"exercisetype": "DELETE", 
		"text": "Löschen Sie alle Bücher, die mehr als 8,50 Euro kosten und die Verlags-ID 7 besitzen.", 
		"samplesolutions": [
			"DELETE FROM books WHERE price > 8.50 AND publisher_id = '7' "
		], 
		"validation": "SELECT * FROM books"
	}, 
	{
		"id": 4, 
		"exercisetype": "DELETE", 
		"text": "Löschen Sie alle Bücher, die vom Autor 'J.R.R.Tolkien' geschrieben wurden.", 
		"samplesolutions": [
			"DELETE FROM books WHERE author = 'J.R.R.Tolkien'"
		]
	}, 
	{
		"id": 1, 
		"exercisetype": "INSERT", 
		"text": "Fügen Sie ein neues Buch mit dem Titel 'Applied Statistical Genetics with R ' in die Datenbank ein (Autor: 'Andrea S.Foulkes', Erscheinungsjahr: 2010, Publisher-ID: '12' , Signatur 'PF / 520 - Y / 2', Lagerbestand '289', Preis: '24.99 ').", 
		"samplesolutions": [
			"INSERT INTO books(title, author, year, publisher_id, signature, stock, price) VALUES('Applied Statistical Genetics with R', 'Andrea S. Foulkes', 2010, 12, 'PF/520-Y/2', 289, 24.99)"
		], 
		"validation": "SELECT * FROM books"
	}, 
	{
		"id": 2, 
		"exercisetype": "INSERT", 
		"text": "Fügen Sie einen neuen Kunden in die Datenbank ein. Name 'Ferdinandus Merkle', Email: 'ferdinandus_1856 @yahoo.com', Geburtstag: '1990 - 11 - 24 '. Das Passwort und die Adresse soll vorerst leer gelassen werden.", 
		"samplesolutions": [
			"INSERT INTO customers (first_name, family_name, birthday, email, password, address) VALUES ('Ferdinandus', 'Merkle', '1990 - 11 - 24', 'ferdinandus_1856 @yahoo.com','','');", 
			"INSERT INTO customers (first_name, family_name, birthday, email) VALUES ('Ferdinandus', 'Merkle', '1990 - 11 - 24', 'ferdinandus_1856 @yahoo.com');"
		]
	}
]