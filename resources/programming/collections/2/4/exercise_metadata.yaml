id: 4
collectionId: 2
toolId: programming
semanticVersion: {major: 1, minor: 0, patch: 0}
title: Namenssuche
authors:
  - bje40dc
text:
  relativePath: text.html
tags: [S, L, T, FL]
state: APPROVED
difficulty: 2

content:
  functionName: name_search
  foldername: name_search
  filename: name_search
  inputTypes: []
  outputType: VOID

  unitTestPart:

    unitTestType: Normal

    unitTestsDescription: >

    unitTestFiles:
      - name: name_search.py
        resourcePath: name_search_declaration.py
        fileType: python
        editable: false
      - name: test_name_search.py
        resourcePath: test_name_search_declaration.py
        fileType: python
        editable: true

    unitTestTestConfigs:
      - id: 0
        shouldFail: false
        description: Musterlösung...
        file:
          name: name_search_0.py
          resourcePath: unit_test_sols/name_search_0.py
          fileType: python
          editable: false
      - id: 1
        shouldFail: true
        description: Es soll das korrekte Präfix zurückgegeben werden.
        file:
          name: name_search_1.py
          resourcePath: unit_test_sols/name_search_1.py
          fileType: python
          editable: false
      - id: 2
        shouldFail: true
        description: Es soll das korrekte Suffix zurückgegeben werden.
        file:
          name: name_search_2.py
          resourcePath: unit_test_sols/name_search_2.py
          fileType: python
          editable: false
      - id: 3
        shouldFail: true
        description: Falls das Fragment in mehreren Namen enthalten ist sollen alle Namen zurückgegeben werden.
        file:
          name: name_search_3.py
          resourcePath: unit_test_sols/name_search_3.py
          fileType: python
          editable: false
      - id: 4
        shouldFail: true
        description: Falls das Fragment in keinem Namen enthalten ist soll eine leere Liste zurückgegeben werden.
        file:
          name: name_search_4.py
          resourcePath: unit_test_sols/name_search_4.py
          fileType: python
          editable: false
    testFileName: test_name_search.py
    sampleSolFileNames: [test_name_search.py]

  implementationPart:
    base: |
      from typing import Tuple, List


      def name_search(all_names: List[str], fragment: str) -> List[Tuple[str, str]]:
          pass
    files:
      - name: test_name_search.py
        resourcePath: test_name_search.py
        fileType: python
        editable: false
      - name: name_search.py
        resourcePath: name_search_declaration.py
        fileType: python
        editable: true
    implFileName: name_search.py
    sampleSolFileNames: [name_search.py]

  sampleSolutions:
    - id: 1
      sample:
        files:
          - name: name_search.py
            resourcePath: name_search.py
            fileType: python
            editable: false
          - name: test_name_search.py
            resourcePath: test_name_search.py
            fileType: python
            editable: false
        testData: []

  sampleTestData: []

