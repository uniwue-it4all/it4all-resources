id: 2
collectionId: 1
toolId: programming
semanticVersion: {major: 1, minor: 0, patch: 0}
title: Fakultät
authors:
  - bje40dc
text:
  relativePath: text.html
tags: [E, M, FL]
state: APPROVED

content:
  functionName: factorial
  foldername: factorial
  filename: factorial

  inputTypes:
    - {id: 1, inputName: n, inputType: INTEGER}
  outputType: INTEGER

  unitTestPart:
    unitTestType: Normal

    unitTestsDescription: >
      Schreiben Sie Unittests für die Funktion <code>factorial(n: int) -> int</code>. Diese soll die Fakultät der Zahl
      <code>n</code> berechnen. Der Funktionsparameter <code>n</code> soll größer als 0 sein.

    unitTestFiles:
      - name: factorial.py
        resourcePath: factorial_declaration.py
        fileType: python
        editable: false
      - name: test_factorial.py
        resourcePath: test_factorial_declaration.py
        fileType: python
        editable: true

    unitTestTestConfigs:
      - id: 0
        shouldFail: false
        description: Diese Implementierung ist korrekt und sollte alle Tests bestehen.
        file:
          name: factorial_0.py
          resourcePath: unit_test_sols/factorial_0.py
          fileType: python
          editable: false
      - id: 1
        shouldFail: true
        description: Falls das Funktionsargument 'n' keine Ganzzahl ist, soll eine Exception geworfen werden.
        file:
          name: factorial_1.py
          resourcePath: unit_test_sols/factorial_1.py
          fileType: python
          editable: false
      - id: 2
        shouldFail: true
        description: Falls das Funktionsargument kleiner oder gleich 0 ist, soll eine Exception geworfen werden.
        file:
          name: factorial_2.py
          resourcePath: unit_test_sols/factorial_2.py
          fileType: python
          editable: false
      - id: 3
        shouldFail: true
        description: Die Funktion soll das richtige Resultat zurückliefern.
        file:
          name: factorial_3.py
          resourcePath: unit_test_sols/factorial_3.py
          fileType: python
          editable: false
    testFileName: test_factorial.py
    sampleSolFileNames: [test_factorial.py]

  implementationPart:
    base: |
      def factorial(n: int) -> int:
          pass
    files:
      - name: test_factorial.py
        resourcePath: test_factorial.py
        fileType: python
        editable: false
      - name: factorial.py
        resourcePath: factorial_declaration.py
        fileType: python
        editable: true
    implFileName: factorial.py
    sampleSolFileNames: [factorial.py]

  sampleTestData: []

  sampleSolutions:
    - id: 1
      sample:
        files:
          - name: test_factorial.py
            resourcePath: test_factorial.py
            fileType: python
            editable: false
          - name: factorial.py
            resourcePath: factorial.py
            fileType: python
            editable: false
        testData: []
