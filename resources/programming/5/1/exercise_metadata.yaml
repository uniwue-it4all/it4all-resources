id: 1
collectionId: 5
toolId: programming
semanticVersion: {major: 1, minor: 0, patch: 0}
title: Tupel
authors:
  - bje40dc
text:
  relativePath: programming/5/1/text.html
tags: []
state: APPROVED

content:
  functionName: tuples
  foldername: tuples
  filename: tuples
  inputTypes: []
  outputType: VOID

  unitTestPart:

    unitTestType: Normal

    unitTestsDescription: >

    unitTestFiles:
      - name: tuples.py
        resourcePath: programming/5/1/tuples_declaration.py
        fileType: python
        editable: false
      - name: test_tuples.py
        resourcePath: programming/5/1/test_tuples_declaration.py
        fileType: python
        editable: true

    unitTestTestConfigs:
      - id: 0
        shouldFail: false
        description: Musterlösung...
      - id: 1
        shouldFail: true
        description: Die Funktion min_max soll für Listen mit einem Element das korrekte Minimum und Maximum zurückgeben.
      - id: 2
        shouldFail: true
        description: Die Funktion min_max soll für Listen mit mehr als einem Element das korrekte Minimum und Maximum zurückgeben.
      - id: 3
        shouldFail: true
        description: Die Funktion account_value soll den korrekten Gesamtwert aller Aktien berechnen.
      - id: 4
        shouldFail: true
        description: Die Funktion account_value soll den Gesamtwert in Euro berechnen.
      - id: 5
        shouldFail: true
        description: Die Funktion account_value soll 0 zurückgeben, falls die übergebene Liste leer ist.
      - id: 6
        shouldFail: true
        description: Falls eine Aktie mit dem übergebenen Namen in der übergebenen Liste vorhanden ist, soll die Funktion stock_value den korrekten Wert der Aktie zurückgeben.
      - id: 7
        shouldFail: true
        description: Falls keine Aktie mit dem übergebenen Namen in der übergebenen Liste vorhanden ist, soll die Funktion stock_value -1 zurückgeben.
      - id: 8
        shouldFail: true
        description: Falls die übergebene Liste leer ist, soll die Funktion stock_value -1 zurückgeben.
    testFileName: test_tuples.py
    sampleSolFileNames: [test_tuples.py]

  implementationPart:
    base: |
      from typing import Tuple, List


      def min_max(my_list: List[int]) -> Tuple[int, int]:
          pass


      def account_value(stocks: List[Tuple[str, int]]) -> float:
          pass


      def stock_value(stocks: List[Tuple[str, int]], name: str) -> int:
          pass
    files:
      - name: test_tuples.py
        resourcePath: programming/5/1/test_tuples.py
        fileType: python
        editable: false
      - name: tuples.py
        resourcePath: programming/5/1/tuples_declaration.py
        fileType: python
        editable: true
    implFileName: tuples.py
    sampleSolFileNames: [tuples.py]

  sampleSolutions:
    - id: 1
      sample:
        files:
          - name: tuples.py
            resourcePath: programming/5/1/tuples.py
            fileType: python
            editable: false
          - name: test_tuples.py
            resourcePath: programming/5/1/test_tuples.py
            fileType: python
            editable: false
        testData: []

  sampleTestData: []

  tags:
    - Tuples
    - Lists
    - Math
    - Conditions
