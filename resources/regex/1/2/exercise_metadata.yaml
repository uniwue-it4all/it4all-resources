!Exercise
id: 2
collectionId: 1
toolId: regex
semanticVersion: {major: 1, minor: 0, patch: 0}
title: Einfache Datumsangaben
author: bje40dc
text: >
  Schreiben Sie einen regulären Ausdruck, der eine einfache Version von Datumsangaben findet. Dabei sollen der Tag und
  der Monat jeweils aus zwei und die Jahresangabe aus vier Zahlen bestehen. Als Trennzeichen soll jeweils ein Punkt
  verwendet werden. Eine Validierung auf kalendarische Korrektheit (zum Beispiel, dass der 30.02.2019 oder der
  99.17.3005 nicht existieren) ist nicht erforderlich. Außerdem sind führende Nullen erlaubt.
state: APPROVED

content:
  maxPoints: 2
  correctionType: MATCHING

  matchTestData:
    - {id: 1, data: '12.01.1999', isIncluded: true}
    - {id: 2, data: '99.17.3006', isIncluded: true}
    - {id: 3, data: '33.11.1931', isIncluded: true}
    - {id: 4, data: '01.01.0700', isIncluded: true}
    - {id: 5, data: '1.1.1999', isIncluded: false}
    - {id: 6, data: '01.01.700', isIncluded: false}
    - {id: 7, data: '3.12.2011', isIncluded: false}
    - {id: 8, data: '29.3.2018', isIncluded: false}
    - {id: 9, data: '12-01-1999', isIncluded: false}
    - {id: 10, data: '1.1.1', isIncluded: false}
    - {id: 11, data: '12.10', isIncluded: false}
    - {id: 12, data: '11.2.',isIncluded: false}

  extractionTestData: []

  sampleSolutions:
    - {id: 1, sample: '\d\d\.\d\d\.\d\d\d\d'}
    - {id: 2, sample: '\d{2}\.\d{2}\.\d{4}'}
    - {id: 3, sample: '[0-9]{2}\.[0-9]{2}\.[0-9]{4}'}
